---
title: "visualization"
format: pdf
editor: visual
---

## Set up

Here stores all the package needed for this visalization.

```{r setup}
#| echo: false
#| warning: false
#| message: false
requiredCRAN <- c('tidyverse')
requiredBiocPackages <- c('rtracklayer','GenomicFeatures','Gviz','ensembldb','Rsamtools','GenomicAlignments','BRGenomics','randomcoloR')
# requiredBiocPackages <- 
#   c('rtracklayer','GEOquery','BiocFileCache',
#     'SummarizedExperiment','GenomicFeatures','Gviz','DESeq2',
#     'ensembldb')
purrr::walk(requiredCRAN, function(x) library(x,character.only = TRUE))
purrr::walk(requiredBiocPackages, function(x) library(x,character.only = TRUE))
```

## Annotation data

We are using `gencode.vM29.primary_assembly.annotation.gtf` build one TxDB object `txdb` and one EnsDb object `GRCm39`.

```{r parse_gtf}
#| warning: false
#| message: false
# traditional txdb input
txdb <- 
  import("/mnt/gtklab01/linglab/mmusculus_annotation_files/gencode.vM29.primary_assembly.annotation.gtf") |>
  keepStandardChromosomes(pruning.mode="coarse") |>
  makeTxDbFromGRanges()
genes(txdb) # 55357ranges,22seq

# try out EnsDb one
DB <- ensembldb::ensDbFromGtf("/mnt/gtklab01/linglab/mmusculus_annotation_files/gencode.vM29.primary_assembly.annotation.gtf",
                              outfile="/mnt/gtklab01/xiaoqing/scaffold/GRCm39_Ens106.sqlite",
                              organism = "Mus_musculus",
                              genomeVersion ="GRCm39",
                              version=106)
ens106 <- EnsDb(DB)
seqlevelsStyle(ens106) <- "UCSC"
GRCm39 <- ens106
# GRCm39 <- keepStandardChromosomes(ens106,pruning.mode="coarse")
geneRanges_GRCm39 <- genes(GRCm39) # 55414 ranges,39 seq
```

## Cytobands

It seems like mouse cytobands are not informative enough, might not consider includes it in the plotting function.

```{r CytoBands}
#| echo: false
#| warning: false
#| message: false

download.file(url="https://hgdownload.soe.ucsc.edu/goldenPath/mm39/database/cytoBandIdeo.txt.gz",
              destfile="/mnt/gtklab01/xiaoqing/scaffold/cytoBandIdeo.txt.gz")

cytobands <- read_tsv("/mnt/gtklab01/xiaoqing/scaffold/cytoBandIdeo.txt.gz",
         col_names = c("chrom","chromStart","chromEnd","name","gieStain"))
```

## Getting Additional Data

```{r fix_para}
#| warning: false
#| message: false

# directory set
data_dir <- "/mnt/gtklab01/xiaoqing/star/results/group"
 
# grouping tag
treatment_group <- c(104,108,128,154)
control_group <- c(120,125,147,148)
condition_tag <- c("u","m1","m2","d")

# color shades
control_shades <- generate_shades("#282A62")
treatment_shades <- generate_shades("#912C2C")

```

```{r actual_function}
#| warning: false
#| message: false

## import a selected region of a bigwig file as BRG (single base range) object
import_bigwig <- function(file,bw_selection) {
  bw_data <- BRGenomics::makeGRangesBRG(import.bw(file,selection=rtracklayer::BigWigSelection(bw_selection)))
  keepStandardChromosomes(bw_data,pruning.mode = "coarse")
}

merge_treatment_bw <- function(selection_range,treatment_n,bwinfo=bw_fileinfo) {
  bwinfo <- dplyr::filter(bwinfo,treatment==treatment_n)
  bw_data <- split(map(bwinfo$bw_path,import_bigwig,bw_selection=selection_range),
        bwinfo$tag)
  bw_range <- map(bw_data, ~ {
                  mergeGRangesData(.x,exact_overlaps = TRUE)
    })
  return(bw_range)
}

generate_shades <- function(base_color,condition_tag) {
  # Convert hex to RGB
  base_rgb <- col2rgb(base_color) / 255
  shades <- colorRampPalette(c("white", rgb(base_rgb[1], base_rgb[2], base_rgb[3])))(5)
  return(shades[2:length(shades)])
}

add_track <- function(new_track) {
  if (is.list(new_track)) {
    show_track <<- append(show_track,new_track)
  } else {
  show_track <<- append(show_track,list(new_track))
  }
  return(show_track)
}
```

Getting bam, bigwig involved.

```{r bigwig}
#| warning: false
#| message: false
# directory set
data_dir <- "/mnt/gtklab01/xiaoqing/star/results/group"
 
# grouping tag
treatment_group <- c(104,108,128,154)
control_group <- c(120,125,147,148)
condition_tag <- c("u","m1","m2","d")
 
bw_fileinfo <- expand_grid(tibble(treatment=rep(c("control","treatment"),each=4),
       group=c(control_group,treatment_group)),
       tag=condition_tag) |>
  mutate(bw_path=glue::glue("{data_dir}/unmapped_CTX_{group}_{tag}.bw"))
```

```{r bam}
#| echo: false
#| warning: false
#| eval: false

bam_path <- list.files(path = data_dir, pattern = "^unmappedAligned.sortedByCoord.out_CTX_[0-9]{3}_(d|m1|m2|u).bam$", full.names = TRUE)

# transform all bam file into DataTrack stored in track_list
bam_track_list <- list()
for (file in bam_path) {
  track_name <- str_match(file, "unmappedAligned.sortedByCoord.out_(CTX_[0-9]{3}_(d|m1|m2|u))\\.bam$")[,2]
  bam_track <- DataTrack(range = file, genome = "mm39",
                         type = "l", name = track_name, window = -1)
  bam_track_list[[track_name]] <- bam_track
}

control_tracks <- get_track_filter(bam_track_list, control_group)
treatment_tracks <- get_track_filter(bam_track_list, treatment_group)
plotTracks(control_tracks, from = 80126311, to = 80151482, chromosome = "chr18", main = "Control Group")
```

## Visualization

```{r}
#| warning: false

plot_gene <- function(goi) {
  
  gr <- geneRanges_GRCm39[goi]
  print(gr)
  ## let's make it 10% wider
  embiggen_factor <- round(width(gr)*0.1)
  start(gr) <- start(gr) - embiggen_factor
  end(gr) <- end(gr) + embiggen_factor
  show_track <- list()
  
  ## first track:: cytobands
  idt <- IdeogramTrack(chromosome=as.character(chrom(gr)),
                     genome='mm39',
                     bands=cytobands,
                     from=start(gr),to=end(gr))
  add_track(idt)

  ## track:: current trxns
  grTrack <- GeneRegionTrack(ensembldb::filter(GRCm39, ~ gene_id == goi),
                             name=gr$symbol,
                             start=start(gr),
                             end=end(gr),
                             cex.group=0.4,
                             showId=TRUE)
  plotTracks(grTrack)
  add_track(grTrack)
  
  ## track:: for bw
  control_bw_data <-merge_treatment_bw(selection_range = gr,
                                     treatment_n = "control")
  ko_bw_data <-merge_treatment_bw(selection_range = gr,
                                     treatment_n = "treatment")

  control_datatrack <- map(names(control_bw_data),
    function(n) {
      color <- control_shades[match(n,names(control_bw_data))]
      DataTrack(control_bw_data[[n]],
                name = glue::glue("control_{n}"),
                type="polygon",
                # ylim=c(0,600),
                fill.mountain=c("white",color),
                col="black")
    })
  add_track(control_datatrack)

  ko_datatrack <- map(names(ko_bw_data),
    function(n) {
      color <- treatment_shades[match(n,names(ko_bw_data))]
      DataTrack(ko_bw_data[[n]],
                name = glue::glue("treatment_{n}"),
                type="polygon",
                # ylim=c(0,600),
                fill.mountain=c("white",color),
                col="black")
    })
  add_track(ko_datatrack)
  
  ## track:: genomic coordinates
  gaxis <- GenomeAxisTrack()
  add_track(gaxis)
  
  plotTracks(show_track, cex.sampleNames = 0.6)
}

plot_gene("ENSMUSG00000026753.6")
```

```{r}
treatment_d_trk <- OverlayTrack(bw_treatment_d_tracks,from=start(gr),to=end(gr),chromosome = as.character(chrom(gr)),name = "treatment")

control_d_trk <- OverlayTrack(bw_control_d_tracks,from=start(gr),to=end(gr),chromosome = as.character(chrom(gr)))

plotTracks(list(treatment_d_trk,control_d_trk),from=start(gr),to=end(gr),chromosome = as.character(chrom(gr)))

Trail_track_wr <- DataTrack(
    range=keepStandardChromosomes(bw_track_list[["CTX_104_d"]]@stream(file),pruning.mode="coarse"),
    genome = bw_track_list[["CTX_104_d"]]@genome,
    chromosome = bw_track_list[["CTX_104_d"]]@chromosome,
    type = "l",
    window = -1,
    name = "window raw track")

Trail_track_w <- DataTrack(
    range=bw_track_list[["CTX_104_d"]]@reference,
    genome = bw_track_list[["CTX_104_d"]]@genome,
    type = "l",
    window = -1,
    name = "window track 2")

plotTracks(list(bw_track_list[["CTX_104_d"]],Trail_track,Trail_track_w,Trail_track_raw,Trail_track_wr),from=start(gr),to=end(gr),chromosome = as.character(chrom(gr)))
```
